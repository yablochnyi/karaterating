(() => {
    var e = {
            610: (e) => {
                var t = !("undefined" == typeof window || !window.document || !window.document.createElement);
                e.exports = t;
            },
        },
        t = {};
    function i(l) {
        var s = t[l];
        if (void 0 !== s) return s.exports;
        var r = (t[l] = { exports: {} });
        return e[l](r, r.exports, i), r.exports;
    }
    (() => {
        "use strict";
        var e = i(610);
        const t = function (e) {
                var t = typeof e;
                return null != e && ("object" == t || "function" == t);
            },
            l = "object" == typeof global && global && global.Object === Object && global;
        var s = "object" == typeof self && self && self.Object === Object && self;
        const r = l || s || Function("return this")(),
            o = function () {
                return r.Date.now();
            };
        var n = /\s/;
        var a = /^\s+/;
        const c = function (e) {
                return e
                    ? e
                          .slice(
                              0,
                              (function (e) {
                                  for (var t = e.length; t-- && n.test(e.charAt(t)); );
                                  return t;
                              })(e) + 1
                          )
                          .replace(a, "")
                    : e;
            },
            u = r.Symbol;
        var h = Object.prototype,
            d = h.hasOwnProperty,
            p = h.toString,
            f = u ? u.toStringTag : void 0;
        var m = Object.prototype.toString;
        var v = u ? u.toStringTag : void 0;
        const y = function (e) {
            return null == e
                ? void 0 === e
                    ? "[object Undefined]"
                    : "[object Null]"
                : v && v in Object(e)
                ? (function (e) {
                      var t = d.call(e, f),
                          i = e[f];
                      try {
                          e[f] = void 0;
                          var l = !0;
                      } catch (e) {}
                      var s = p.call(e);
                      return l && (t ? (e[f] = i) : delete e[f]), s;
                  })(e)
                : (function (e) {
                      return m.call(e);
                  })(e);
        };
        var b = /^[-+]0x[0-9a-f]+$/i,
            g = /^0b[01]+$/i,
            x = /^0o[0-7]+$/i,
            E = parseInt;
        const S = function (e) {
            if ("number" == typeof e) return e;
            if (
                (function (e) {
                    return (
                        "symbol" == typeof e ||
                        ((function (e) {
                            return null != e && "object" == typeof e;
                        })(e) &&
                            "[object Symbol]" == y(e))
                    );
                })(e)
            )
                return NaN;
            if (t(e)) {
                var i = "function" == typeof e.valueOf ? e.valueOf() : e;
                e = t(i) ? i + "" : i;
            }
            if ("string" != typeof e) return 0 === e ? e : +e;
            e = c(e);
            var l = g.test(e);
            return l || x.test(e) ? E(e.slice(2), l ? 2 : 8) : b.test(e) ? NaN : +e;
        };
        var A = Math.max,
            w = Math.min;
        const O = function (e, i, l) {
            var s,
                r,
                n,
                a,
                c,
                u,
                h = 0,
                d = !1,
                p = !1,
                f = !0;
            if ("function" != typeof e) throw new TypeError("Expected a function");
            function m(t) {
                var i = s,
                    l = r;
                return (s = r = void 0), (h = t), (a = e.apply(l, i));
            }
            function v(e) {
                var t = e - u;
                return void 0 === u || t >= i || t < 0 || (p && e - h >= n);
            }
            function y() {
                var e = o();
                if (v(e)) return b(e);
                c = setTimeout(
                    y,
                    (function (e) {
                        var t = i - (e - u);
                        return p ? w(t, n - (e - h)) : t;
                    })(e)
                );
            }
            function b(e) {
                return (c = void 0), f && s ? m(e) : ((s = r = void 0), a);
            }
            function g() {
                var e = o(),
                    t = v(e);
                if (((s = arguments), (r = this), (u = e), t)) {
                    if (void 0 === c)
                        return (function (e) {
                            return (h = e), (c = setTimeout(y, i)), d ? m(e) : a;
                        })(u);
                    if (p) return clearTimeout(c), (c = setTimeout(y, i)), m(u);
                }
                return void 0 === c && (c = setTimeout(y, i)), a;
            }
            return (
                (i = S(i) || 0),
                t(l) && ((d = !!l.leading), (n = (p = "maxWait" in l) ? A(S(l.maxWait) || 0, i) : n), (f = "trailing" in l ? !!l.trailing : f)),
                (g.cancel = function () {
                    void 0 !== c && clearTimeout(c), (h = 0), (s = u = r = c = void 0);
                }),
                (g.flush = function () {
                    return void 0 === c ? a : b(o());
                }),
                g
            );
        };
        var k = function () {
                return (
                    (k =
                        Object.assign ||
                        function (e) {
                            for (var t, i = 1, l = arguments.length; i < l; i++) for (var s in (t = arguments[i])) Object.prototype.hasOwnProperty.call(t, s) && (e[s] = t[s]);
                            return e;
                        }),
                    k.apply(this, arguments)
                );
            },
            q = null,
            L = null;
        function _() {
            if (null === q) {
                if ("undefined" == typeof document) return (q = 0);
                var e = document.body,
                    t = document.createElement("div");
                t.classList.add("simplebar-hide-scrollbar"), e.appendChild(t);
                var i = t.getBoundingClientRect().right;
                e.removeChild(t), (q = i);
            }
            return q;
        }
        function W(e) {
            return e && e.ownerDocument && e.ownerDocument.defaultView ? e.ownerDocument.defaultView : window;
        }
        function M(e) {
            return e && e.ownerDocument ? e.ownerDocument : document;
        }
        e &&
            window.addEventListener("resize", function () {
                L !== window.devicePixelRatio && ((L = window.devicePixelRatio), (q = null));
            });
        var N = function (e) {
            return Array.prototype.reduce.call(
                e,
                function (e, t) {
                    var i = t.name.match(/data-simplebar-(.+)/);
                    if (i) {
                        var l = i[1].replace(/\W+(.)/g, function (e, t) {
                            return t.toUpperCase();
                        });
                        switch (t.value) {
                            case "true":
                                e[l] = !0;
                                break;
                            case "false":
                                e[l] = !1;
                                break;
                            case void 0:
                                e[l] = !0;
                                break;
                            default:
                                e[l] = t.value;
                        }
                    }
                    return e;
                },
                {}
            );
        };
        function z(e, t) {
            var i;
            e && (i = e.classList).add.apply(i, t.split(" "));
        }
        function C(e, t) {
            e &&
                t.split(" ").forEach(function (t) {
                    e.classList.remove(t);
                });
        }
        function T(e) {
            return ".".concat(e.split(" ").join("."));
        }
        var R = Object.freeze({ __proto__: null, getElementWindow: W, getElementDocument: M, getOptions: N, addClasses: z, removeClasses: C, classNamesToQuery: T }),
            D = W,
            V = M,
            H = N,
            I = z,
            j = C,
            B = T,
            X = (function () {
                function i(e, l) {
                    void 0 === l && (l = {});
                    var s = this;
                    if (
                        ((this.removePreventClickId = null),
                        (this.minScrollbarWidth = 20),
                        (this.stopScrollDelay = 175),
                        (this.isScrolling = !1),
                        (this.isMouseEntering = !1),
                        (this.scrollXTicking = !1),
                        (this.scrollYTicking = !1),
                        (this.wrapperEl = null),
                        (this.contentWrapperEl = null),
                        (this.contentEl = null),
                        (this.offsetEl = null),
                        (this.maskEl = null),
                        (this.placeholderEl = null),
                        (this.heightAutoObserverWrapperEl = null),
                        (this.heightAutoObserverEl = null),
                        (this.rtlHelpers = null),
                        (this.scrollbarWidth = 0),
                        (this.resizeObserver = null),
                        (this.mutationObserver = null),
                        (this.elStyles = null),
                        (this.isRtl = null),
                        (this.mouseX = 0),
                        (this.mouseY = 0),
                        (this.onMouseMove = function () {}),
                        (this.onWindowResize = function () {}),
                        (this.onStopScrolling = function () {}),
                        (this.onMouseEntered = function () {}),
                        (this.onScroll = function () {
                            var e = D(s.el);
                            s.scrollXTicking || (e.requestAnimationFrame(s.scrollX), (s.scrollXTicking = !0)),
                                s.scrollYTicking || (e.requestAnimationFrame(s.scrollY), (s.scrollYTicking = !0)),
                                s.isScrolling || ((s.isScrolling = !0), I(s.el, s.classNames.scrolling)),
                                s.showScrollbar("x"),
                                s.showScrollbar("y"),
                                s.onStopScrolling();
                        }),
                        (this.scrollX = function () {
                            s.axis.x.isOverflowing && s.positionScrollbar("x"), (s.scrollXTicking = !1);
                        }),
                        (this.scrollY = function () {
                            s.axis.y.isOverflowing && s.positionScrollbar("y"), (s.scrollYTicking = !1);
                        }),
                        (this._onStopScrolling = function () {
                            j(s.el, s.classNames.scrolling), s.options.autoHide && (s.hideScrollbar("x"), s.hideScrollbar("y")), (s.isScrolling = !1);
                        }),
                        (this.onMouseEnter = function () {
                            s.isMouseEntering || (I(s.el, s.classNames.mouseEntered), s.showScrollbar("x"), s.showScrollbar("y"), (s.isMouseEntering = !0)), s.onMouseEntered();
                        }),
                        (this._onMouseEntered = function () {
                            j(s.el, s.classNames.mouseEntered), s.options.autoHide && (s.hideScrollbar("x"), s.hideScrollbar("y")), (s.isMouseEntering = !1);
                        }),
                        (this._onMouseMove = function (e) {
                            (s.mouseX = e.clientX), (s.mouseY = e.clientY), (s.axis.x.isOverflowing || s.axis.x.forceVisible) && s.onMouseMoveForAxis("x"), (s.axis.y.isOverflowing || s.axis.y.forceVisible) && s.onMouseMoveForAxis("y");
                        }),
                        (this.onMouseLeave = function () {
                            s.onMouseMove.cancel(),
                                (s.axis.x.isOverflowing || s.axis.x.forceVisible) && s.onMouseLeaveForAxis("x"),
                                (s.axis.y.isOverflowing || s.axis.y.forceVisible) && s.onMouseLeaveForAxis("y"),
                                (s.mouseX = -1),
                                (s.mouseY = -1);
                        }),
                        (this._onWindowResize = function () {
                            (s.scrollbarWidth = s.getScrollbarWidth()), s.hideNativeScrollbar();
                        }),
                        (this.onPointerEvent = function (e) {
                            var t, i;
                            s.axis.x.track.el &&
                                s.axis.y.track.el &&
                                s.axis.x.scrollbar.el &&
                                s.axis.y.scrollbar.el &&
                                ((s.axis.x.track.rect = s.axis.x.track.el.getBoundingClientRect()),
                                (s.axis.y.track.rect = s.axis.y.track.el.getBoundingClientRect()),
                                (s.axis.x.isOverflowing || s.axis.x.forceVisible) && (t = s.isWithinBounds(s.axis.x.track.rect)),
                                (s.axis.y.isOverflowing || s.axis.y.forceVisible) && (i = s.isWithinBounds(s.axis.y.track.rect)),
                                (t || i) &&
                                    (e.stopPropagation(),
                                    "pointerdown" === e.type &&
                                        "touch" !== e.pointerType &&
                                        (t && ((s.axis.x.scrollbar.rect = s.axis.x.scrollbar.el.getBoundingClientRect()), s.isWithinBounds(s.axis.x.scrollbar.rect) ? s.onDragStart(e, "x") : s.onTrackClick(e, "x")),
                                        i && ((s.axis.y.scrollbar.rect = s.axis.y.scrollbar.el.getBoundingClientRect()), s.isWithinBounds(s.axis.y.scrollbar.rect) ? s.onDragStart(e, "y") : s.onTrackClick(e, "y")))));
                        }),
                        (this.drag = function (e) {
                            var t, l, r, o, n, a, c, u, h, d, p;
                            if (s.draggedAxis && s.contentWrapperEl) {
                                var f = s.axis[s.draggedAxis].track,
                                    m = null !== (l = null === (t = f.rect) || void 0 === t ? void 0 : t[s.axis[s.draggedAxis].sizeAttr]) && void 0 !== l ? l : 0,
                                    v = s.axis[s.draggedAxis].scrollbar,
                                    y = null !== (o = null === (r = s.contentWrapperEl) || void 0 === r ? void 0 : r[s.axis[s.draggedAxis].scrollSizeAttr]) && void 0 !== o ? o : 0,
                                    b = parseInt(null !== (a = null === (n = s.elStyles) || void 0 === n ? void 0 : n[s.axis[s.draggedAxis].sizeAttr]) && void 0 !== a ? a : "0px", 10);
                                e.preventDefault(), e.stopPropagation();
                                var g =
                                        ("y" === s.draggedAxis ? e.pageY : e.pageX) -
                                        (null !== (u = null === (c = f.rect) || void 0 === c ? void 0 : c[s.axis[s.draggedAxis].offsetAttr]) && void 0 !== u ? u : 0) -
                                        s.axis[s.draggedAxis].dragOffset,
                                    x =
                                        ((g = "x" === s.draggedAxis && s.isRtl ? (null !== (d = null === (h = f.rect) || void 0 === h ? void 0 : h[s.axis[s.draggedAxis].sizeAttr]) && void 0 !== d ? d : 0) - v.size - g : g) / (m - v.size)) *
                                        (y - b);
                                "x" === s.draggedAxis && s.isRtl && (x = (null === (p = i.getRtlHelpers()) || void 0 === p ? void 0 : p.isScrollingToNegative) ? -x : x), (s.contentWrapperEl[s.axis[s.draggedAxis].scrollOffsetAttr] = x);
                            }
                        }),
                        (this.onEndDrag = function (e) {
                            var t = V(s.el),
                                i = D(s.el);
                            e.preventDefault(),
                                e.stopPropagation(),
                                j(s.el, s.classNames.dragging),
                                t.removeEventListener("mousemove", s.drag, !0),
                                t.removeEventListener("mouseup", s.onEndDrag, !0),
                                (s.removePreventClickId = i.setTimeout(function () {
                                    t.removeEventListener("click", s.preventClick, !0), t.removeEventListener("dblclick", s.preventClick, !0), (s.removePreventClickId = null);
                                }));
                        }),
                        (this.preventClick = function (e) {
                            e.preventDefault(), e.stopPropagation();
                        }),
                        (this.el = e),
                        (this.options = k(k({}, i.defaultOptions), l)),
                        (this.classNames = k(k({}, i.defaultOptions.classNames), l.classNames)),
                        (this.axis = {
                            x: {
                                scrollOffsetAttr: "scrollLeft",
                                sizeAttr: "width",
                                scrollSizeAttr: "scrollWidth",
                                offsetSizeAttr: "offsetWidth",
                                offsetAttr: "left",
                                overflowAttr: "overflowX",
                                dragOffset: 0,
                                isOverflowing: !0,
                                forceVisible: !1,
                                track: { size: null, el: null, rect: null, isVisible: !1 },
                                scrollbar: { size: null, el: null, rect: null, isVisible: !1 },
                            },
                            y: {
                                scrollOffsetAttr: "scrollTop",
                                sizeAttr: "height",
                                scrollSizeAttr: "scrollHeight",
                                offsetSizeAttr: "offsetHeight",
                                offsetAttr: "top",
                                overflowAttr: "overflowY",
                                dragOffset: 0,
                                isOverflowing: !0,
                                forceVisible: !1,
                                track: { size: null, el: null, rect: null, isVisible: !1 },
                                scrollbar: { size: null, el: null, rect: null, isVisible: !1 },
                            },
                        }),
                        "object" != typeof this.el || !this.el.nodeName)
                    )
                        throw new Error("Argument passed to SimpleBar must be an HTML element instead of ".concat(this.el));
                    (this.onMouseMove = (function (e, i, l) {
                        var s = !0,
                            r = !0;
                        if ("function" != typeof e) throw new TypeError("Expected a function");
                        return t(l) && ((s = "leading" in l ? !!l.leading : s), (r = "trailing" in l ? !!l.trailing : r)), O(e, i, { leading: s, maxWait: i, trailing: r });
                    })(this._onMouseMove, 64)),
                        (this.onWindowResize = O(this._onWindowResize, 64, { leading: !0 })),
                        (this.onStopScrolling = O(this._onStopScrolling, this.stopScrollDelay)),
                        (this.onMouseEntered = O(this._onMouseEntered, this.stopScrollDelay)),
                        this.init();
                }
                return (
                    (i.getRtlHelpers = function () {
                        if (i.rtlHelpers) return i.rtlHelpers;
                        var e = document.createElement("div");
                        e.innerHTML = '<div class="simplebar-dummy-scrollbar-size"><div></div></div>';
                        var t = e.firstElementChild,
                            l = null == t ? void 0 : t.firstElementChild;
                        if (!l) return null;
                        document.body.appendChild(t), (t.scrollLeft = 0);
                        var s = i.getOffset(t),
                            r = i.getOffset(l);
                        t.scrollLeft = -999;
                        var o = i.getOffset(l);
                        return document.body.removeChild(t), (i.rtlHelpers = { isScrollOriginAtZero: s.left !== r.left, isScrollingToNegative: r.left !== o.left }), i.rtlHelpers;
                    }),
                    (i.prototype.getScrollbarWidth = function () {
                        try {
                            return (this.contentWrapperEl && "none" === getComputedStyle(this.contentWrapperEl, "::-webkit-scrollbar").display) ||
                                "scrollbarWidth" in document.documentElement.style ||
                                "-ms-overflow-style" in document.documentElement.style
                                ? 0
                                : _();
                        } catch (e) {
                            return _();
                        }
                    }),
                    (i.getOffset = function (e) {
                        var t = e.getBoundingClientRect(),
                            i = V(e),
                            l = D(e);
                        return { top: t.top + (l.pageYOffset || i.documentElement.scrollTop), left: t.left + (l.pageXOffset || i.documentElement.scrollLeft) };
                    }),
                    (i.prototype.init = function () {
                        e && (this.initDOM(), (this.rtlHelpers = i.getRtlHelpers()), (this.scrollbarWidth = this.getScrollbarWidth()), this.recalculate(), this.initListeners());
                    }),
                    (i.prototype.initDOM = function () {
                        var e, t;
                        (this.wrapperEl = this.el.querySelector(B(this.classNames.wrapper))),
                            (this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector(B(this.classNames.contentWrapper))),
                            (this.contentEl = this.options.contentNode || this.el.querySelector(B(this.classNames.contentEl))),
                            (this.offsetEl = this.el.querySelector(B(this.classNames.offset))),
                            (this.maskEl = this.el.querySelector(B(this.classNames.mask))),
                            (this.placeholderEl = this.findChild(this.wrapperEl, B(this.classNames.placeholder))),
                            (this.heightAutoObserverWrapperEl = this.el.querySelector(B(this.classNames.heightAutoObserverWrapperEl))),
                            (this.heightAutoObserverEl = this.el.querySelector(B(this.classNames.heightAutoObserverEl))),
                            (this.axis.x.track.el = this.findChild(this.el, "".concat(B(this.classNames.track)).concat(B(this.classNames.horizontal)))),
                            (this.axis.y.track.el = this.findChild(this.el, "".concat(B(this.classNames.track)).concat(B(this.classNames.vertical)))),
                            (this.axis.x.scrollbar.el = (null === (e = this.axis.x.track.el) || void 0 === e ? void 0 : e.querySelector(B(this.classNames.scrollbar))) || null),
                            (this.axis.y.scrollbar.el = (null === (t = this.axis.y.track.el) || void 0 === t ? void 0 : t.querySelector(B(this.classNames.scrollbar))) || null),
                            this.options.autoHide || (I(this.axis.x.scrollbar.el, this.classNames.visible), I(this.axis.y.scrollbar.el, this.classNames.visible));
                    }),
                    (i.prototype.initListeners = function () {
                        var e,
                            t = this,
                            i = D(this.el);
                        if (
                            (this.el.addEventListener("mouseenter", this.onMouseEnter),
                            this.el.addEventListener("pointerdown", this.onPointerEvent, !0),
                            this.el.addEventListener("mousemove", this.onMouseMove),
                            this.el.addEventListener("mouseleave", this.onMouseLeave),
                            null === (e = this.contentWrapperEl) || void 0 === e || e.addEventListener("scroll", this.onScroll),
                            i.addEventListener("resize", this.onWindowResize),
                            this.contentEl)
                        ) {
                            if (window.ResizeObserver) {
                                var l = !1,
                                    s = i.ResizeObserver || ResizeObserver;
                                (this.resizeObserver = new s(function () {
                                    l &&
                                        i.requestAnimationFrame(function () {
                                            t.recalculate();
                                        });
                                })),
                                    this.resizeObserver.observe(this.el),
                                    this.resizeObserver.observe(this.contentEl),
                                    i.requestAnimationFrame(function () {
                                        l = !0;
                                    });
                            }
                            (this.mutationObserver = new i.MutationObserver(function () {
                                i.requestAnimationFrame(function () {
                                    t.recalculate();
                                });
                            })),
                                this.mutationObserver.observe(this.contentEl, { childList: !0, subtree: !0, characterData: !0 });
                        }
                    }),
                    (i.prototype.recalculate = function () {
                        if (this.heightAutoObserverEl && this.contentEl && this.contentWrapperEl && this.wrapperEl && this.placeholderEl) {
                            var e = D(this.el);
                            (this.elStyles = e.getComputedStyle(this.el)), (this.isRtl = "rtl" === this.elStyles.direction);
                            var t = this.contentEl.offsetWidth,
                                i = this.heightAutoObserverEl.offsetHeight <= 1,
                                l = this.heightAutoObserverEl.offsetWidth <= 1 || t > 0,
                                s = this.contentWrapperEl.offsetWidth,
                                r = this.elStyles.overflowX,
                                o = this.elStyles.overflowY;
                            (this.contentEl.style.padding = "".concat(this.elStyles.paddingTop, " ").concat(this.elStyles.paddingRight, " ").concat(this.elStyles.paddingBottom, " ").concat(this.elStyles.paddingLeft)),
                                (this.wrapperEl.style.margin = "-".concat(this.elStyles.paddingTop, " -").concat(this.elStyles.paddingRight, " -").concat(this.elStyles.paddingBottom, " -").concat(this.elStyles.paddingLeft));
                            var n = this.contentEl.scrollHeight,
                                a = this.contentEl.scrollWidth;
                            (this.contentWrapperEl.style.height = i ? "auto" : "100%"), (this.placeholderEl.style.width = l ? "".concat(t || a, "px") : "auto"), (this.placeholderEl.style.height = "".concat(n, "px"));
                            var c = this.contentWrapperEl.offsetHeight;
                            (this.axis.x.isOverflowing = 0 !== t && a > t),
                                (this.axis.y.isOverflowing = n > c),
                                (this.axis.x.isOverflowing = "hidden" !== r && this.axis.x.isOverflowing),
                                (this.axis.y.isOverflowing = "hidden" !== o && this.axis.y.isOverflowing),
                                (this.axis.x.forceVisible = "x" === this.options.forceVisible || !0 === this.options.forceVisible),
                                (this.axis.y.forceVisible = "y" === this.options.forceVisible || !0 === this.options.forceVisible),
                                this.hideNativeScrollbar();
                            var u = this.axis.x.isOverflowing ? this.scrollbarWidth : 0,
                                h = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;
                            (this.axis.x.isOverflowing = this.axis.x.isOverflowing && a > s - h),
                                (this.axis.y.isOverflowing = this.axis.y.isOverflowing && n > c - u),
                                (this.axis.x.scrollbar.size = this.getScrollbarSize("x")),
                                (this.axis.y.scrollbar.size = this.getScrollbarSize("y")),
                                this.axis.x.scrollbar.el && (this.axis.x.scrollbar.el.style.width = "".concat(this.axis.x.scrollbar.size, "px")),
                                this.axis.y.scrollbar.el && (this.axis.y.scrollbar.el.style.height = "".concat(this.axis.y.scrollbar.size, "px")),
                                this.positionScrollbar("x"),
                                this.positionScrollbar("y"),
                                this.toggleTrackVisibility("x"),
                                this.toggleTrackVisibility("y");
                        }
                    }),
                    (i.prototype.getScrollbarSize = function (e) {
                        var t, i;
                        if ((void 0 === e && (e = "y"), !this.axis[e].isOverflowing || !this.contentEl)) return 0;
                        var l,
                            s = this.contentEl[this.axis[e].scrollSizeAttr],
                            r = null !== (i = null === (t = this.axis[e].track.el) || void 0 === t ? void 0 : t[this.axis[e].offsetSizeAttr]) && void 0 !== i ? i : 0,
                            o = r / s;
                        return (l = Math.max(~~(o * r), this.options.scrollbarMinSize)), this.options.scrollbarMaxSize && (l = Math.min(l, this.options.scrollbarMaxSize)), l;
                    }),
                    (i.prototype.positionScrollbar = function (e) {
                        var t, l, s;
                        void 0 === e && (e = "y");
                        var r = this.axis[e].scrollbar;
                        if (this.axis[e].isOverflowing && this.contentWrapperEl && r.el && this.elStyles) {
                            var o = this.contentWrapperEl[this.axis[e].scrollSizeAttr],
                                n = (null === (t = this.axis[e].track.el) || void 0 === t ? void 0 : t[this.axis[e].offsetSizeAttr]) || 0,
                                a = parseInt(this.elStyles[this.axis[e].sizeAttr], 10),
                                c = this.contentWrapperEl[this.axis[e].scrollOffsetAttr];
                            (c = "x" === e && this.isRtl && (null === (l = i.getRtlHelpers()) || void 0 === l ? void 0 : l.isScrollOriginAtZero) ? -c : c),
                                "x" === e && this.isRtl && (c = (null === (s = i.getRtlHelpers()) || void 0 === s ? void 0 : s.isScrollingToNegative) ? c : -c);
                            var u = c / (o - a),
                                h = ~~((n - r.size) * u);
                            (h = "x" === e && this.isRtl ? -h + (n - r.size) : h), (r.el.style.transform = "x" === e ? "translate3d(".concat(h, "px, 0, 0)") : "translate3d(0, ".concat(h, "px, 0)"));
                        }
                    }),
                    (i.prototype.toggleTrackVisibility = function (e) {
                        void 0 === e && (e = "y");
                        var t = this.axis[e].track.el,
                            i = this.axis[e].scrollbar.el;
                        t &&
                            i &&
                            this.contentWrapperEl &&
                            (this.axis[e].isOverflowing || this.axis[e].forceVisible
                                ? ((t.style.visibility = "visible"), (this.contentWrapperEl.style[this.axis[e].overflowAttr] = "scroll"), this.el.classList.add("".concat(this.classNames.scrollable, "-").concat(e)))
                                : ((t.style.visibility = "hidden"), (this.contentWrapperEl.style[this.axis[e].overflowAttr] = "hidden"), this.el.classList.remove("".concat(this.classNames.scrollable, "-").concat(e))),
                            this.axis[e].isOverflowing ? (i.style.display = "block") : (i.style.display = "none"));
                    }),
                    (i.prototype.showScrollbar = function (e) {
                        void 0 === e && (e = "y"), this.axis[e].isOverflowing && !this.axis[e].scrollbar.isVisible && (I(this.axis[e].scrollbar.el, this.classNames.visible), (this.axis[e].scrollbar.isVisible = !0));
                    }),
                    (i.prototype.hideScrollbar = function (e) {
                        void 0 === e && (e = "y"), this.axis[e].isOverflowing && this.axis[e].scrollbar.isVisible && (j(this.axis[e].scrollbar.el, this.classNames.visible), (this.axis[e].scrollbar.isVisible = !1));
                    }),
                    (i.prototype.hideNativeScrollbar = function () {
                        this.offsetEl &&
                            ((this.offsetEl.style[this.isRtl ? "left" : "right"] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? "-".concat(this.scrollbarWidth, "px") : "0px"),
                            (this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? "-".concat(this.scrollbarWidth, "px") : "0px"));
                    }),
                    (i.prototype.onMouseMoveForAxis = function (e) {
                        void 0 === e && (e = "y");
                        var t = this.axis[e];
                        t.track.el &&
                            t.scrollbar.el &&
                            ((t.track.rect = t.track.el.getBoundingClientRect()),
                            (t.scrollbar.rect = t.scrollbar.el.getBoundingClientRect()),
                            this.isWithinBounds(t.track.rect)
                                ? (this.showScrollbar(e), I(t.track.el, this.classNames.hover), this.isWithinBounds(t.scrollbar.rect) ? I(t.scrollbar.el, this.classNames.hover) : j(t.scrollbar.el, this.classNames.hover))
                                : (j(t.track.el, this.classNames.hover), this.options.autoHide && this.hideScrollbar(e)));
                    }),
                    (i.prototype.onMouseLeaveForAxis = function (e) {
                        void 0 === e && (e = "y"), j(this.axis[e].track.el, this.classNames.hover), j(this.axis[e].scrollbar.el, this.classNames.hover), this.options.autoHide && this.hideScrollbar(e);
                    }),
                    (i.prototype.onDragStart = function (e, t) {
                        var i;
                        void 0 === t && (t = "y");
                        var l = V(this.el),
                            s = D(this.el),
                            r = this.axis[t].scrollbar,
                            o = "y" === t ? e.pageY : e.pageX;
                        (this.axis[t].dragOffset = o - ((null === (i = r.rect) || void 0 === i ? void 0 : i[this.axis[t].offsetAttr]) || 0)),
                            (this.draggedAxis = t),
                            I(this.el, this.classNames.dragging),
                            l.addEventListener("mousemove", this.drag, !0),
                            l.addEventListener("mouseup", this.onEndDrag, !0),
                            null === this.removePreventClickId
                                ? (l.addEventListener("click", this.preventClick, !0), l.addEventListener("dblclick", this.preventClick, !0))
                                : (s.clearTimeout(this.removePreventClickId), (this.removePreventClickId = null));
                    }),
                    (i.prototype.onTrackClick = function (e, t) {
                        var i,
                            l,
                            s,
                            r,
                            o = this;
                        void 0 === t && (t = "y");
                        var n = this.axis[t];
                        if (this.options.clickOnTrack && n.scrollbar.el && this.contentWrapperEl) {
                            e.preventDefault();
                            var a = D(this.el);
                            this.axis[t].scrollbar.rect = n.scrollbar.el.getBoundingClientRect();
                            var c = null !== (l = null === (i = this.axis[t].scrollbar.rect) || void 0 === i ? void 0 : i[this.axis[t].offsetAttr]) && void 0 !== l ? l : 0,
                                u = parseInt(null !== (r = null === (s = this.elStyles) || void 0 === s ? void 0 : s[this.axis[t].sizeAttr]) && void 0 !== r ? r : "0px", 10),
                                h = this.contentWrapperEl[this.axis[t].scrollOffsetAttr],
                                d = ("y" === t ? this.mouseY - c : this.mouseX - c) < 0 ? -1 : 1,
                                p = -1 === d ? h - u : h + u,
                                f = function () {
                                    o.contentWrapperEl &&
                                        (-1 === d
                                            ? h > p && ((h -= 40), (o.contentWrapperEl[o.axis[t].scrollOffsetAttr] = h), a.requestAnimationFrame(f))
                                            : h < p && ((h += 40), (o.contentWrapperEl[o.axis[t].scrollOffsetAttr] = h), a.requestAnimationFrame(f)));
                                };
                            f();
                        }
                    }),
                    (i.prototype.getContentElement = function () {
                        return this.contentEl;
                    }),
                    (i.prototype.getScrollElement = function () {
                        return this.contentWrapperEl;
                    }),
                    (i.prototype.removeListeners = function () {
                        var e = D(this.el);
                        this.el.removeEventListener("mouseenter", this.onMouseEnter),
                            this.el.removeEventListener("pointerdown", this.onPointerEvent, !0),
                            this.el.removeEventListener("mousemove", this.onMouseMove),
                            this.el.removeEventListener("mouseleave", this.onMouseLeave),
                            this.contentWrapperEl && this.contentWrapperEl.removeEventListener("scroll", this.onScroll),
                            e.removeEventListener("resize", this.onWindowResize),
                            this.mutationObserver && this.mutationObserver.disconnect(),
                            this.resizeObserver && this.resizeObserver.disconnect(),
                            this.onMouseMove.cancel(),
                            this.onWindowResize.cancel(),
                            this.onStopScrolling.cancel(),
                            this.onMouseEntered.cancel();
                    }),
                    (i.prototype.unMount = function () {
                        this.removeListeners();
                    }),
                    (i.prototype.isWithinBounds = function (e) {
                        return this.mouseX >= e.left && this.mouseX <= e.left + e.width && this.mouseY >= e.top && this.mouseY <= e.top + e.height;
                    }),
                    (i.prototype.findChild = function (e, t) {
                        var i = e.matches || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector;
                        return Array.prototype.filter.call(e.children, function (e) {
                            return i.call(e, t);
                        })[0];
                    }),
                    (i.rtlHelpers = null),
                    (i.defaultOptions = {
                        forceVisible: !1,
                        clickOnTrack: !0,
                        scrollbarMinSize: 25,
                        scrollbarMaxSize: 0,
                        ariaLabel: "scrollable content",
                        classNames: {
                            contentEl: "simplebar-content",
                            contentWrapper: "simplebar-content-wrapper",
                            offset: "simplebar-offset",
                            mask: "simplebar-mask",
                            wrapper: "simplebar-wrapper",
                            placeholder: "simplebar-placeholder",
                            scrollbar: "simplebar-scrollbar",
                            track: "simplebar-track",
                            heightAutoObserverWrapperEl: "simplebar-height-auto-observer-wrapper",
                            heightAutoObserverEl: "simplebar-height-auto-observer",
                            visible: "simplebar-visible",
                            horizontal: "simplebar-horizontal",
                            vertical: "simplebar-vertical",
                            hover: "simplebar-hover",
                            dragging: "simplebar-dragging",
                            scrolling: "simplebar-scrolling",
                            scrollable: "simplebar-scrollable",
                            mouseEntered: "simplebar-mouse-entered",
                        },
                        scrollableNode: null,
                        contentNode: null,
                        autoHide: !0,
                    }),
                    (i.getOptions = H),
                    (i.helpers = R),
                    i
                );
            })(),
            P = function (e, t) {
                return (
                    (P =
                        Object.setPrototypeOf ||
                        ({ __proto__: [] } instanceof Array &&
                            function (e, t) {
                                e.__proto__ = t;
                            }) ||
                        function (e, t) {
                            for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                        }),
                    P(e, t)
                );
            },
            Y = X.helpers,
            F = Y.getOptions,
            $ = Y.addClasses,
            U = (function (e) {
                function t() {
                    for (var i = [], l = 0; l < arguments.length; l++) i[l] = arguments[l];
                    var s = e.apply(this, i) || this;
                    return t.instances.set(i[0], s), s;
                }
                return (
                    (function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
                        function i() {
                            this.constructor = e;
                        }
                        P(e, t), (e.prototype = null === t ? Object.create(t) : ((i.prototype = t.prototype), new i()));
                    })(t, e),
                    (t.initDOMLoadedElements = function () {
                        document.removeEventListener("DOMContentLoaded", this.initDOMLoadedElements),
                            window.removeEventListener("load", this.initDOMLoadedElements),
                            Array.prototype.forEach.call(document.querySelectorAll("[data-simplebar]"), function (e) {
                                "init" === e.getAttribute("data-simplebar") || t.instances.has(e) || new t(e, F(e.attributes));
                            });
                    }),
                    (t.removeObserver = function () {
                        var e;
                        null === (e = t.globalObserver) || void 0 === e || e.disconnect();
                    }),
                    (t.prototype.initDOM = function () {
                        var e,
                            t,
                            i,
                            l = this;
                        if (
                            !Array.prototype.filter.call(this.el.children, function (e) {
                                return e.classList.contains(l.classNames.wrapper);
                            }).length
                        ) {
                            for (
                                this.wrapperEl = document.createElement("div"),
                                    this.contentWrapperEl = document.createElement("div"),
                                    this.offsetEl = document.createElement("div"),
                                    this.maskEl = document.createElement("div"),
                                    this.contentEl = document.createElement("div"),
                                    this.placeholderEl = document.createElement("div"),
                                    this.heightAutoObserverWrapperEl = document.createElement("div"),
                                    this.heightAutoObserverEl = document.createElement("div"),
                                    $(this.wrapperEl, this.classNames.wrapper),
                                    $(this.contentWrapperEl, this.classNames.contentWrapper),
                                    $(this.offsetEl, this.classNames.offset),
                                    $(this.maskEl, this.classNames.mask),
                                    $(this.contentEl, this.classNames.contentEl),
                                    $(this.placeholderEl, this.classNames.placeholder),
                                    $(this.heightAutoObserverWrapperEl, this.classNames.heightAutoObserverWrapperEl),
                                    $(this.heightAutoObserverEl, this.classNames.heightAutoObserverEl);
                                this.el.firstChild;

                            )
                                this.contentEl.appendChild(this.el.firstChild);
                            this.contentWrapperEl.appendChild(this.contentEl),
                                this.offsetEl.appendChild(this.contentWrapperEl),
                                this.maskEl.appendChild(this.offsetEl),
                                this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl),
                                this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl),
                                this.wrapperEl.appendChild(this.maskEl),
                                this.wrapperEl.appendChild(this.placeholderEl),
                                this.el.appendChild(this.wrapperEl),
                                null === (e = this.contentWrapperEl) || void 0 === e || e.setAttribute("tabindex", "0"),
                                null === (t = this.contentWrapperEl) || void 0 === t || t.setAttribute("role", "region"),
                                null === (i = this.contentWrapperEl) || void 0 === i || i.setAttribute("aria-label", this.options.ariaLabel);
                        }
                        if (!this.axis.x.track.el || !this.axis.y.track.el) {
                            var s = document.createElement("div"),
                                r = document.createElement("div");
                            $(s, this.classNames.track),
                                $(r, this.classNames.scrollbar),
                                s.appendChild(r),
                                (this.axis.x.track.el = s.cloneNode(!0)),
                                $(this.axis.x.track.el, this.classNames.horizontal),
                                (this.axis.y.track.el = s.cloneNode(!0)),
                                $(this.axis.y.track.el, this.classNames.vertical),
                                this.el.appendChild(this.axis.x.track.el),
                                this.el.appendChild(this.axis.y.track.el);
                        }
                        X.prototype.initDOM.call(this), this.el.setAttribute("data-simplebar", "init");
                    }),
                    (t.prototype.unMount = function () {
                        X.prototype.unMount.call(this), t.instances.delete(this.el);
                    }),
                    (t.initHtmlApi = function () {
                        (this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this)),
                            "undefined" != typeof MutationObserver && ((this.globalObserver = new MutationObserver(t.handleMutations)), this.globalObserver.observe(document, { childList: !0, subtree: !0 })),
                            "complete" === document.readyState || ("loading" !== document.readyState && !document.documentElement.doScroll)
                                ? window.setTimeout(this.initDOMLoadedElements)
                                : (document.addEventListener("DOMContentLoaded", this.initDOMLoadedElements), window.addEventListener("load", this.initDOMLoadedElements));
                    }),
                    (t.handleMutations = function (e) {
                        e.forEach(function (e) {
                            e.addedNodes.forEach(function (e) {
                                1 === e.nodeType &&
                                    (e.hasAttribute("data-simplebar")
                                        ? !t.instances.has(e) && document.documentElement.contains(e) && new t(e, F(e.attributes))
                                        : e.querySelectorAll("[data-simplebar]").forEach(function (e) {
                                              "init" !== e.getAttribute("data-simplebar") && !t.instances.has(e) && document.documentElement.contains(e) && new t(e, F(e.attributes));
                                          }));
                            }),
                                e.removedNodes.forEach(function (e) {
                                    1 === e.nodeType &&
                                        ("init" === e.getAttribute("data-simplebar")
                                            ? t.instances.has(e) && !document.documentElement.contains(e) && t.instances.get(e).unMount()
                                            : Array.prototype.forEach.call(e.querySelectorAll('[data-simplebar="init"]'), function (e) {
                                                  t.instances.has(e) && !document.documentElement.contains(e) && t.instances.get(e).unMount();
                                              }));
                                });
                        });
                    }),
                    (t.instances = new WeakMap()),
                    t
                );
            })(X);
        e && U.initHtmlApi(),
            (window.onload = function () {
                if (
                    (document.querySelector(".tournament-add-container") &&
                        document.querySelector(".tournament-add-container").addEventListener("click", () => {
                            (document.querySelector(".tournament-add-wrapper").style = "opacity: 0; visibility: hidden; height: 0;"),
                                (document.querySelectorAll(".edit_cart")[0].style = "opacity: 1; visibility: visible; height: auto;"),
                                (document.querySelectorAll(".edit_cart")[1].style = "opacity: 1; visibility: visible; height: auto;");
                        }),
                    // document.querySelector(".gender-icon-wrapper1") &&
                    //     document.querySelector(".gender-icon-wrapper1").addEventListener("click", function () {
                    //         "М" == this.textContent ? (this.textContent = "Ж") : (this.textContent = "М");
                    //     }),
                    document.querySelector(".puli_tour"))
                ) {
                    let r,
                        o = [],
                        n = [],
                        a = 0,
                        c = 0;
                    function u(e) {
                        clearInterval(r),
                            e
                                ? ((n[m - 1] = document.querySelectorAll(".tour__step")[m - 1].clientHeight), (a = document.querySelectorAll(".tour__step")[m - 1].clientHeight), (r = setInterval(h, 17060 / a / 100)))
                                : ((c = 0), (r = setInterval(d, 0.001)));
                    }
                    function h() {
                        const e = document.querySelectorAll(".tour__step")[m - 1];
                        (a -= 100), (e.style.height = a + "px"), a <= 0 && clearInterval(r);
                    }
                    function d() {
                        const e = document.querySelectorAll(".tour__step")[m];
                        (c += 100),
                            (e.style.height = c + "px"),
                            c >= n[m] &&
                                (0 == m &&
                                    document.querySelectorAll(".tour__step").forEach((e, t) => {
                                        e.style.height = o[t] + "px";
                                    }),
                                clearInterval(r));
                    }
                    document.querySelectorAll(".tour__step").forEach((e, t) => {
                        o[t] = e.clientHeight;
                    });
                    let p,
                        f,
                        m = 0;
                    document.addEventListener("touchstart", function (e) {
                        p = e.changedTouches[0].pageX;
                    }),
                        document.addEventListener("touchend", function (e) {
                            (f = e.changedTouches[0].pageX),
                                p > f && m != document.querySelectorAll(".tour__step").length - 2
                                    ? (0 == m &&
                                          document.querySelectorAll(".tour__step").forEach((e, t) => {
                                              e.style.height = "";
                                          }),
                                      (m += 1),
                                      0 < m && u(1))
                                    : p < f && -1 != m && ((m -= 1), m >= 0 && u(0)),
                                -1 != m
                                    ? document.querySelectorAll(".tour__step")[m].scrollIntoView({ behavior: "smooth", inline: "start", block: "start" })
                                    : document.getElementById("nav_puli").scrollIntoView({ behavior: "smooth", inline: "start", block: "start" });
                        });
                }
                var e = document.querySelectorAll(".info-text"),
                    t = document.querySelectorAll(".tournament-logo-text1"),
                    i = document.querySelectorAll(".tournament-inf__box"),
                    l = document.querySelectorAll(".tournament-inf__box1");
                if (
                    (e[0] &&
                        (e.forEach((e, t) => {
                            e.addEventListener("click", () => {
                                "flex" == i[t].style.display ? (i[t].style.display = "") : (i[t].style.display = "flex"), (e.style.display = "none");
                            });
                        }),
                        t.forEach((e, t) => {
                            e.addEventListener("click", () => {
                                "flex" == l[t].style.display ? (l[t].style.display = "") : (l[t].style.display = "flex"), (e.style.display = "none");
                            });
                        })),
                    document.addEventListener("click", (e) => {
                        document.querySelectorAll(".select_list").forEach((t, i) => {
                            e.target.closest(".select_list") !== t &&
                                e.target.closest(".select_drop") !== document.querySelectorAll(".select_drop")[i] &&
                                (t.classList.remove("select_active"), document.querySelectorAll(".select_drop")[i].classList.remove("select_active"));
                        });
                    }),
                    document.querySelectorAll(".select_drop_link").forEach((e, t) => {
                        e.addEventListener("click", function () {
                            var e = document.querySelectorAll(".select_list")[t];
                            e.classList.contains("select_active")
                                ? (e.classList.remove("select_active"), document.querySelectorAll(".select_drop")[t].classList.remove("select_active"))
                                : (e.classList.add("select_active"), document.querySelectorAll(".select_drop")[t].classList.add("select_active"));
                        });
                    }),
                    console.log(localStorage.getItem("status")),
                    // document.querySelectorAll("#unlog").forEach((e) => {
                    //     e.addEventListener("click", () => {
                    //         console.log(123), localStorage.setItem("status", ""), (window.location = "index.html");
                    //     });
                    // }),
                    localStorage.getItem("status") &&
                        ("student" == localStorage.getItem("status") &&
                            ((document.querySelector(".login-button").style.display = "none"),
                            (document.querySelector(".login-button-mobile").style.display = "none"),
                            (document.querySelector(".profile_header").style.display = "flex"),
                            (document.querySelector("#profile-header-mobile").style.display = "flex")),
                        "coach" == localStorage.getItem("status") &&
                            (document.querySelectorAll(".coach_status").forEach((e) => {
                                e.style.display = "flex";
                            }),
                            document.querySelectorAll(".student_status").forEach((e) => {
                                e.style.display = "none";
                            }),
                            (document.querySelector(".login-button").style.display = "none"),
                            (document.querySelector(".login-button-mobile").style.display = "none"),
                            (document.querySelector(".profile_header").style.display = "flex"),
                            (document.querySelector("#profile-header-mobile").style.display = "flex")),
                        "organizer" == localStorage.getItem("status") &&
                            (document.querySelectorAll(".coach_status").forEach((e) => {
                                e.style.display = "flex";
                            }),
                            document.querySelectorAll(".organizate_status_none").forEach((e) => {
                                e.style.display = "flex";
                            }),
                            "filter_region.html" != window.location.href.split("/")[window.location.href.split("/").length - 1] &&
                                (document.querySelector("a[href='puli_list.html']") &&
                                    document.querySelectorAll("a[href='puli_list.html']").forEach((e) => {
                                        e.href = "puli_list_organizate.html";
                                    }),
                                document.querySelector("a[href='puli_tour.html']") &&
                                    document.querySelectorAll("a[href='puli_tour.html']").forEach((e) => {
                                        e.href = "puli_tour_organizate.html";
                                    })),
                            document.querySelectorAll(".organizate_status").forEach((e) => {
                                e.style.display = "flex";
                            }),
                            document.querySelectorAll(".student_status").forEach((e) => {
                                e.style.display = "none";
                            }),
                            (document.querySelector(".login-button").style.display = "none"),
                            (document.querySelector(".login-button-mobile").style.display = "none"),
                            (document.querySelector(".profile_header").style.display = "flex"),
                            (document.querySelector("#profile-header-mobile").style.display = "flex"))),
                    document.querySelector("#match"))
                ) {
                    var s = document.querySelectorAll("#match");
                    s.forEach((e) => {
                        e.addEventListener("click", () => {
                            s.forEach((e) => {
                                e.classList.remove("active-match"), e.classList.add("match");
                            }),
                                e.classList.add("active-match");
                        });
                    });
                }
                document.querySelector(".burger-checkbox").addEventListener("change", function () {
                    this.checked ? (document.body.style = "overflow:hidden") : (document.body.style = "");
                }),
                    document.querySelector(".container_profi") &&
                        document.querySelectorAll(".hide-button").forEach((e, t) => {
                            e.addEventListener("click", () => {
                                document.querySelectorAll(".hide-block")[t].classList.add("hide-block-ac"),
                                    setTimeout(() => {
                                        document.querySelectorAll(".hide-block")[t].style = "display:none";
                                    }, 500);
                            });
                        }),
                    document.querySelector(".athlete-delete") &&
                        (document.querySelectorAll(".athlete-delete").forEach((e) => {
                            e.addEventListener("click", () => {
                                document.querySelector(".modal").style = "opacity: 1; visibility: visible;";
                            });
                        }),
                        document.querySelectorAll(".modal-actions button").forEach((e) => {
                            e.addEventListener("click", () => {
                                document.querySelector(".modal").style = "";
                            });
                        })),
                    document.querySelector(".delete-member") &&
                        (document.querySelectorAll(".delete-member").forEach((e) => {
                            e.addEventListener("click", () => {
                                document.querySelector(".modal").style = "opacity: 1; visibility: visible;";
                            });
                        }),
                        document.querySelectorAll(".modal-actions button").forEach((e) => {
                            e.addEventListener("click", () => {
                                document.querySelector(".modal").style = "";
                            });
                        })),
                    document.querySelector(".container_puli_list") &&
                        document.querySelectorAll("input[type=checkbox]").forEach((e, t) => {
                            console.log("abc"),
                                e.addEventListener("change", () => {
                                    e.checked ? (console.log("abc"), (document.querySelectorAll(".participant-row")[t - 1].style.background = "#EAFFF2")) : (document.querySelectorAll(".participant-row")[t - 1].style = "");
                                });
                        }),
                    document.querySelector(".participant-list-item-action-remove") &&
                        (document.querySelectorAll(".participant-list-item-action-add").forEach((e, t) => {
                            e.addEventListener("click", () => {
                                (e.style.display = "none"), (document.querySelectorAll(".participant-list-item-action-remove")[t].style = "");
                            });
                        }),
                        document.querySelectorAll(".participant-list-item-action-remove").forEach((e, t) => {
                            e.addEventListener("click", () => {
                                (e.style.display = "none"), (document.querySelectorAll(".participant-list-item-action-add")[t].style = "");
                            });
                        }),
                        document.querySelectorAll(".participant-action-add").forEach((e, t) => {
                            e.addEventListener("click", () => {
                                (e.style.display = "none"), (document.querySelectorAll(".participant-action-rem")[t].style = "");
                            });
                        }),
                        document.querySelectorAll(".participant-action-rem").forEach((e, t) => {
                            e.addEventListener("click", () => {
                                (e.style.display = "none"), (document.querySelectorAll(".participant-action-add")[t].style = "");
                            });
                        }));
            });
    })();
})();
